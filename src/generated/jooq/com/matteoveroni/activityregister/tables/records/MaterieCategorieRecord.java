/*
 * This file is generated by jOOQ.
 */
package com.matteoveroni.activityregister.tables.records;


import com.matteoveroni.activityregister.tables.MaterieCategorie;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MaterieCategorieRecord extends UpdatableRecordImpl<MaterieCategorieRecord> implements Record2<UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>study.materie_categorie.id_materia</code>.
     */
    public MaterieCategorieRecord setIdMateria(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>study.materie_categorie.id_materia</code>.
     */
    public UUID getIdMateria() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>study.materie_categorie.id_categoria</code>.
     */
    public MaterieCategorieRecord setIdCategoria(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>study.materie_categorie.id_categoria</code>.
     */
    public UUID getIdCategoria() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, UUID> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return MaterieCategorie.MATERIE_CATEGORIE.ID_MATERIA;
    }

    @Override
    public Field<UUID> field2() {
        return MaterieCategorie.MATERIE_CATEGORIE.ID_CATEGORIA;
    }

    @Override
    public UUID component1() {
        return getIdMateria();
    }

    @Override
    public UUID component2() {
        return getIdCategoria();
    }

    @Override
    public UUID value1() {
        return getIdMateria();
    }

    @Override
    public UUID value2() {
        return getIdCategoria();
    }

    @Override
    public MaterieCategorieRecord value1(UUID value) {
        setIdMateria(value);
        return this;
    }

    @Override
    public MaterieCategorieRecord value2(UUID value) {
        setIdCategoria(value);
        return this;
    }

    @Override
    public MaterieCategorieRecord values(UUID value1, UUID value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MaterieCategorieRecord
     */
    public MaterieCategorieRecord() {
        super(MaterieCategorie.MATERIE_CATEGORIE);
    }

    /**
     * Create a detached, initialised MaterieCategorieRecord
     */
    public MaterieCategorieRecord(UUID idMateria, UUID idCategoria) {
        super(MaterieCategorie.MATERIE_CATEGORIE);

        setIdMateria(idMateria);
        setIdCategoria(idCategoria);
    }
}
