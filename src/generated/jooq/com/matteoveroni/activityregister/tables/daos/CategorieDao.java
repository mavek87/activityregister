/*
 * This file is generated by jOOQ.
 */
package com.matteoveroni.activityregister.tables.daos;


import com.matteoveroni.activityregister.tables.Categorie;
import com.matteoveroni.activityregister.tables.records.CategorieRecord;

import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategorieDao extends DAOImpl<CategorieRecord, com.matteoveroni.activityregister.tables.pojos.Categorie, UUID> {

    /**
     * Create a new CategorieDao without any configuration
     */
    public CategorieDao() {
        super(Categorie.CATEGORIE, com.matteoveroni.activityregister.tables.pojos.Categorie.class);
    }

    /**
     * Create a new CategorieDao with an attached configuration
     */
    public CategorieDao(Configuration configuration) {
        super(Categorie.CATEGORIE, com.matteoveroni.activityregister.tables.pojos.Categorie.class, configuration);
    }

    @Override
    public UUID getId(com.matteoveroni.activityregister.tables.pojos.Categorie object) {
        return object.getIdCategoria();
    }

    /**
     * Fetch records that have <code>id_categoria BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.matteoveroni.activityregister.tables.pojos.Categorie> fetchRangeOfIdCategoria(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Categorie.CATEGORIE.ID_CATEGORIA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id_categoria IN (values)</code>
     */
    public List<com.matteoveroni.activityregister.tables.pojos.Categorie> fetchByIdCategoria(UUID... values) {
        return fetch(Categorie.CATEGORIE.ID_CATEGORIA, values);
    }

    /**
     * Fetch a unique record that has <code>id_categoria = value</code>
     */
    public com.matteoveroni.activityregister.tables.pojos.Categorie fetchOneByIdCategoria(UUID value) {
        return fetchOne(Categorie.CATEGORIE.ID_CATEGORIA, value);
    }

    /**
     * Fetch records that have <code>nome_categoria BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.matteoveroni.activityregister.tables.pojos.Categorie> fetchRangeOfNomeCategoria(String lowerInclusive, String upperInclusive) {
        return fetchRange(Categorie.CATEGORIE.NOME_CATEGORIA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>nome_categoria IN (values)</code>
     */
    public List<com.matteoveroni.activityregister.tables.pojos.Categorie> fetchByNomeCategoria(String... values) {
        return fetch(Categorie.CATEGORIE.NOME_CATEGORIA, values);
    }

    /**
     * Fetch a unique record that has <code>nome_categoria = value</code>
     */
    public com.matteoveroni.activityregister.tables.pojos.Categorie fetchOneByNomeCategoria(String value) {
        return fetchOne(Categorie.CATEGORIE.NOME_CATEGORIA, value);
    }
}
